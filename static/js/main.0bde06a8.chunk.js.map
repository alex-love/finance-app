{"version":3,"sources":["components/layout/Navbar.js","components/layout/Footer.js","components/layout/Home.js","components/functional/Calculator.js","components/layout/Main.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Navbar","react_default","a","createElement","className","role","react_router_dom","id","to","Component","Footer","rel","style","color","href","target","Home","Graph","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","preventDefault","setState","defineProperty","name","value","asyncToGenerator","regenerator_default","mark","_callee","_this$state","startingAmount","years","interestRate","tmp","newData","wrap","_context","prev","next","console","log","concat","state","data","datasets","calculateInterest","Number","sent","updateLabel","updateData","stop","labels","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","finalAmount","bind","assertThisInitialized","objectSpread","newArray","i","push","prevState","pop","principal","ir","yearlyValue","yearlyTotal","_this$state2","es","width","height","options","title","display","text","scales","xAxes","scaleLabel","labelString","yAxes","onSubmit","type","min","max","onChange","toFixed","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","Calculator","Calculator_Graph","Main","react_router","exact","path","component","App","layout_Navbar","Main_Main","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0bde06a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"green\" role=\"navigation\">\n          <div className=\"nav-wrapper container\">\n            <Link id=\"logo-container\" to=\"/\" className=\"brand-logo\">\n              Finance App\n            </Link>\n            {/* <ul className=\"right hide-on-med-and-down\">\n                            <li><a href=\"#\">Navbar Link</a></li>\n                        </ul>\n\n                        <ul id=\"nav-mobile\" className=\"sidenav\">\n                            <li><a href=\"#\">Navbar Link</a></li>\n                        </ul>\n                        <a href=\"#\" data-target=\"nav-mobile\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a> */}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div>\n        <footer className=\"page-footer green\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col l6 s12\">\n                <h5 className=\"white-text\">About</h5>\n                <p className=\"grey-text text-lighten-4\">\n                  This website contains basic finance and personal investing\n                  tools. I made it to both practice my coding skills, and\n                  provide a reason on a topic that I enjoy. Check out my\n                  blog/personal website{\" \"}\n                  <a\n                    rel=\"noopener noreferrer\"\n                    style={{ color: \"yellow\" }}\n                    href=\"https://alex-love.github.io\"\n                    target=\"_blank\"\n                  >\n                    here.\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer-copyright\">\n            <div className=\"container\">\n              Made with{\" \"}\n              <a\n                className=\"green-text text-lighten-3\"\n                href=\"http://materializecss.com\"\n              >\n                Materialize\n              </a>\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"section no-pad-bot\" id=\"index-banner\">\n          <div className=\"container\">\n            <h1 className=\"header center green-text\">Portfolio App</h1>\n            <div className=\"row center\">\n              <h5 className=\"header col s12 light\">\n                A set of tools and visualizations to see your investments and\n                the projection of your financial obligations.\n              </h5>\n              <div className=\" col s12 light\">\n                <h6>\n                  This project is still in development. I am working on adding:{\" \"}\n                </h6>\n                <ul>\n                  <li>Account system/authentication</li>\n                  <li>\n                    Comprehensize portfolio consolidation dashboard with the\n                    option to add assetts/liabilities\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"row center\">\n              <Link\n                to=\"/compound-interest-calculator\"\n                id=\"download-button\"\n                className=\"btn-large waves-effect waves-light green\"\n              >\n                Try Calculator\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { Line } from \"react-chartjs-2\";\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        labels: [\"1\", \"2\", \"3\"],\n        datasets: [\n          {\n            label: \"Savings\",\n            /* fillColor: \"rgba(220,220,220,0.2)\",\n            strokeColor: \"rgba(220,220,220,1)\",\n            pointColor: \"rgba(220,220,220,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(220,220,220,1)\", */\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: []\n          }\n        ]\n      },\n      startingAmount: 0,\n      interestRate: 0,\n      years: 0,\n      finalAmount: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.calculateInterest = this.calculateInterest.bind(this);\n  }\n\n  handleChange = event => {\n    event.preventDefault();\n    this.setState({ [event.target.name]: event.target.value }, async () => {\n      console.log(\n        ` ir: ${this.state.interestRate} years:${\n          this.state.years\n        } startingAmount:${this.state.startingAmount}`\n      );\n      const { startingAmount, years, interestRate } = this.state;\n      let tmp = this.state.data;\n      let newData = tmp.datasets[0].data;\n      newData = await this.calculateInterest(\n        Number(startingAmount),\n        Number(years),\n        Number(interestRate)\n      );\n      await this.updateLabel(years);\n      this.updateData(newData);\n    });\n  };\n\n  //create copy of data from state\n  //update labels array with correct labels based on number of years\n  //set state with new copy of data\n  updateLabel(years) {\n    let tmp = { ...this.state.data };\n    let newArray = [];\n    for (let i = 0; i < years; i++) {\n      newArray.push(i + 1);\n    }\n    tmp.labels = newArray;\n    this.setState({ data: tmp });\n  }\n\n  updateData(newData) {\n    let tmp = { ...this.state.data };\n    console.log(tmp);\n    tmp.datasets[0].data = newData;\n    console.log(`tmp after: ${tmp.datasets.data}`);\n    this.setState(prevState => {\n      return { data: tmp, finalAmount: prevState.data.datasets[0].data.pop() };\n    });\n    console.log(this.state.data);\n  }\n\n  //A = P (1 + r/n)^(nt) -> assumes yearly compounding for now\n  calculateInterest(principal, years, ir) {\n    var yearlyValue = [];\n    ir = 1 + ir / 100;\n    yearlyValue[0] = principal;\n    console.log(\n      `Inputs: principal: ${typeof principal} years: ${years} interest rate: ${ir}`\n    );\n    for (let i = 1; i < years + 1; i++) {\n      let value = yearlyValue[i - 1]; //P_sub_i-1\n      console.log(`Value: ${value}`);\n      let yearlyTotal = value * ir;\n      yearlyValue.push(yearlyTotal);\n    }\n    console.log(yearlyValue);\n    return yearlyValue;\n  }\n\n  render() {\n    const { data } = this.state.data.datasets[0];\n    const { years, finalAmount } = this.state;\n\n    const chartOptions = {\n      title: {\n        display: true,\n        text: \"Compound Interest Calculator with annual compounding\"\n      },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Years\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Money\"\n            }\n          }\n        ]\n      }\n    };\n    return (\n      <div>\n        <Line\n          data={this.state.data}\n          width={400}\n          height={200}\n          options={chartOptions}\n        />\n        <div className=\"col m8 s8\">\n          <form onSubmit={this.handleChange}>\n            <p className=\"range-field\">\n              Interest Rate: {this.state.interestRate} %\n              <input\n                type=\"range\"\n                name=\"interestRate\"\n                min=\"0\"\n                max=\"100\"\n                value={this.state.interestRate}\n                onChange={this.handleChange}\n              />\n            </p>\n            <p className=\"range-field\">\n              Starting Amount:\n              <input\n                type=\"number\"\n                name=\"startingAmount\"\n                min=\"0\"\n                value={this.state.startingAmount}\n                onChange={this.handleChange}\n              />\n            </p>\n            <p className=\"range-field\">\n              Years:\n              <input\n                type=\"number\"\n                name=\"years\"\n                min=\"0\"\n                value={this.state.years}\n                onChange={this.handleChange}\n              />\n            </p>\n            <button type=\"submit\" name=\"submit\" className=\"waves-effect btn\">\n              Submit\n            </button>\n          </form>\n          <h4>Results:</h4>\n          <p>\n            After {years} years, with a principal investment of $\n            {Number(this.state.startingAmount).toFixed(2)}, you will have $\n            {finalAmount.toFixed(2)}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nvar data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      fillColor: \"rgba(220,220,220,0.2)\",\n      strokeColor: \"rgba(220,220,220,1)\",\n      pointColor: \"rgba(220,220,220,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(220,220,220,1)\",\n      data: [65, 59, 80, 81, 56, 55, 40]\n    },\n    {\n      label: \"My Second dataset\",\n      fillColor: \"rgba(151,187,205,0.2)\",\n      strokeColor: \"rgba(151,187,205,1)\",\n      pointColor: \"rgba(151,187,205,1)\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(151,187,205,1)\",\n      data: [28, 48, 40, 19, 86, 27, 90]\n    }\n  ]\n};\n\nexport default class Calculator extends Component {\n  render() {\n    return (\n      <div className=\"section no-pad-bot\" id=\"index-banner\">\n        <div className=\"container\">\n          <div className=\"section\">\n            <div className=\"row\">\n              <div className=\"col s12 m12\">\n                <Graph data={data} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Calculator from '../functional/Calculator';\n\nexport default class Main extends Component {\n    render() {\n        return (\n      <div>\n          <Switch>\n              <Route exact path='/' component={Home}/>\n              <Route path='/compound-interest-calculator' component={Calculator} />\n          </Switch>\n      </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Navbar from \"./components/layout/Navbar\"\nimport Footer from \"./components/layout/Footer\"\nimport Main from \"./components/layout/Main\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <Navbar />\n       <Main />\n       <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}